// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: frontendapi/frontend.proto

package frontendapi

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Language int32

const (
	// Unknown language.
	Language_LANGUAGE_UNSPECIFIED Language = 0
	// English.
	Language_LANGUAGE_ENGLISH Language = 1
	// Japanese.
	Language_LANGUAGE_JAPANESE Language = 2
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "LANGUAGE_UNSPECIFIED",
		1: "LANGUAGE_ENGLISH",
		2: "LANGUAGE_JAPANESE",
	}
	Language_value = map[string]int32{
		"LANGUAGE_UNSPECIFIED": 0,
		"LANGUAGE_ENGLISH":     1,
		"LANGUAGE_JAPANESE":    2,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_frontendapi_frontend_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_frontendapi_frontend_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{0}
}

type RecipeGenre int32

const (
	RecipeGenre_RECIPE_GENRE_UNSPECIFIED RecipeGenre = 0
	RecipeGenre_RECIPE_GENRE_JAPANESE    RecipeGenre = 1
	RecipeGenre_RECIPE_GENRE_CHINESE     RecipeGenre = 2
	RecipeGenre_RECIPE_GENRE_WESTERN     RecipeGenre = 3
	RecipeGenre_RECIPE_GENRE_KOREAN      RecipeGenre = 4
	RecipeGenre_RECIPE_GENRE_ITALIAN     RecipeGenre = 5
	RecipeGenre_RECIPE_GENRE_ETHNIC      RecipeGenre = 6
)

// Enum value maps for RecipeGenre.
var (
	RecipeGenre_name = map[int32]string{
		0: "RECIPE_GENRE_UNSPECIFIED",
		1: "RECIPE_GENRE_JAPANESE",
		2: "RECIPE_GENRE_CHINESE",
		3: "RECIPE_GENRE_WESTERN",
		4: "RECIPE_GENRE_KOREAN",
		5: "RECIPE_GENRE_ITALIAN",
		6: "RECIPE_GENRE_ETHNIC",
	}
	RecipeGenre_value = map[string]int32{
		"RECIPE_GENRE_UNSPECIFIED": 0,
		"RECIPE_GENRE_JAPANESE":    1,
		"RECIPE_GENRE_CHINESE":     2,
		"RECIPE_GENRE_WESTERN":     3,
		"RECIPE_GENRE_KOREAN":      4,
		"RECIPE_GENRE_ITALIAN":     5,
		"RECIPE_GENRE_ETHNIC":      6,
	}
)

func (x RecipeGenre) Enum() *RecipeGenre {
	p := new(RecipeGenre)
	*p = x
	return p
}

func (x RecipeGenre) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecipeGenre) Descriptor() protoreflect.EnumDescriptor {
	return file_frontendapi_frontend_proto_enumTypes[1].Descriptor()
}

func (RecipeGenre) Type() protoreflect.EnumType {
	return &file_frontendapi_frontend_proto_enumTypes[1]
}

func (x RecipeGenre) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecipeGenre.Descriptor instead.
func (RecipeGenre) EnumDescriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{1}
}

// The source of a recipe.
type RecipeSource int32

const (
	// Unknown source.
	RecipeSource_RECIPE_SOURCE_UNSPECIFIED RecipeSource = 0
	// Recipe from cookpad.
	RecipeSource_RECIPE_SOURCE_COOKPAD RecipeSource = 1
)

// Enum value maps for RecipeSource.
var (
	RecipeSource_name = map[int32]string{
		0: "RECIPE_SOURCE_UNSPECIFIED",
		1: "RECIPE_SOURCE_COOKPAD",
	}
	RecipeSource_value = map[string]int32{
		"RECIPE_SOURCE_UNSPECIFIED": 0,
		"RECIPE_SOURCE_COOKPAD":     1,
	}
)

func (x RecipeSource) Enum() *RecipeSource {
	p := new(RecipeSource)
	*p = x
	return p
}

func (x RecipeSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecipeSource) Descriptor() protoreflect.EnumDescriptor {
	return file_frontendapi_frontend_proto_enumTypes[2].Descriptor()
}

func (RecipeSource) Type() protoreflect.EnumType {
	return &file_frontendapi_frontend_proto_enumTypes[2]
}

func (x RecipeSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecipeSource.Descriptor instead.
func (RecipeSource) EnumDescriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{2}
}

type StartChatRequest_ModelProvider int32

const (
	// The default model.
	StartChatRequest_MODEL_PROVIDER_UNSPECIFIED StartChatRequest_ModelProvider = 0
	// Google GenAI model.
	StartChatRequest_MODEL_PROVIDER_GOOGLE_GENAI StartChatRequest_ModelProvider = 1
	// OpenAI model.
	StartChatRequest_MODEL_PROVIDER_OPENAI StartChatRequest_ModelProvider = 2
)

// Enum value maps for StartChatRequest_ModelProvider.
var (
	StartChatRequest_ModelProvider_name = map[int32]string{
		0: "MODEL_PROVIDER_UNSPECIFIED",
		1: "MODEL_PROVIDER_GOOGLE_GENAI",
		2: "MODEL_PROVIDER_OPENAI",
	}
	StartChatRequest_ModelProvider_value = map[string]int32{
		"MODEL_PROVIDER_UNSPECIFIED":  0,
		"MODEL_PROVIDER_GOOGLE_GENAI": 1,
		"MODEL_PROVIDER_OPENAI":       2,
	}
)

func (x StartChatRequest_ModelProvider) Enum() *StartChatRequest_ModelProvider {
	p := new(StartChatRequest_ModelProvider)
	*p = x
	return p
}

func (x StartChatRequest_ModelProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartChatRequest_ModelProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_frontendapi_frontend_proto_enumTypes[3].Descriptor()
}

func (StartChatRequest_ModelProvider) Type() protoreflect.EnumType {
	return &file_frontendapi_frontend_proto_enumTypes[3]
}

func (x StartChatRequest_ModelProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartChatRequest_ModelProvider.Descriptor instead.
func (StartChatRequest_ModelProvider) EnumDescriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{13, 0}
}

// The content of a chat message.
type ChatContent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ChatContent_Message
	//	*ChatContent_Audio
	Payload       isChatContent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatContent) Reset() {
	*x = ChatContent{}
	mi := &file_frontendapi_frontend_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatContent) ProtoMessage() {}

func (x *ChatContent) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatContent.ProtoReflect.Descriptor instead.
func (*ChatContent) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{0}
}

func (x *ChatContent) GetPayload() isChatContent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ChatContent) GetMessage() string {
	if x != nil {
		if x, ok := x.Payload.(*ChatContent_Message); ok {
			return x.Message
		}
	}
	return ""
}

func (x *ChatContent) GetAudio() []byte {
	if x != nil {
		if x, ok := x.Payload.(*ChatContent_Audio); ok {
			return x.Audio
		}
	}
	return nil
}

type isChatContent_Payload interface {
	isChatContent_Payload()
}

type ChatContent_Message struct {
	// A text message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type ChatContent_Audio struct {
	// An audio message.
	Audio []byte `protobuf:"bytes,2,opt,name=audio,proto3,oneof"`
}

func (*ChatContent_Message) isChatContent_Payload() {}

func (*ChatContent_Audio) isChatContent_Payload() {}

// A request to send in a chat.
type ChatRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The content of the chat message.
	Content *ChatContent `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// The recipe to chat about.
	//
	// Types that are valid to be assigned to Recipe:
	//
	//	*ChatRequest_RecipeText
	//	*ChatRequest_RecipeId
	Recipe        isChatRequest_Recipe `protobuf_oneof:"recipe"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatRequest) Reset() {
	*x = ChatRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRequest) ProtoMessage() {}

func (x *ChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRequest.ProtoReflect.Descriptor instead.
func (*ChatRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{1}
}

func (x *ChatRequest) GetContent() *ChatContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ChatRequest) GetRecipe() isChatRequest_Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

func (x *ChatRequest) GetRecipeText() string {
	if x != nil {
		if x, ok := x.Recipe.(*ChatRequest_RecipeText); ok {
			return x.RecipeText
		}
	}
	return ""
}

func (x *ChatRequest) GetRecipeId() string {
	if x != nil {
		if x, ok := x.Recipe.(*ChatRequest_RecipeId); ok {
			return x.RecipeId
		}
	}
	return ""
}

type isChatRequest_Recipe interface {
	isChatRequest_Recipe()
}

type ChatRequest_RecipeText struct {
	// Free-form text of the recipe.
	RecipeText string `protobuf:"bytes,2,opt,name=recipe_text,json=recipeText,proto3,oneof"`
}

type ChatRequest_RecipeId struct {
	// The ID of a cookchat recipe.
	RecipeId string `protobuf:"bytes,3,opt,name=recipe_id,json=recipeId,proto3,oneof"`
}

func (*ChatRequest_RecipeText) isChatRequest_Recipe() {}

func (*ChatRequest_RecipeId) isChatRequest_Recipe() {}

// A response in a chat.
type ChatResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The content of the chat message.
	Content       *ChatContent `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{2}
}

func (x *ChatResponse) GetContent() *ChatContent {
	if x != nil {
		return x.Content
	}
	return nil
}

// An ingredient in a recipe.
type RecipeIngredient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the ingredient.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The quantity of the ingredient as free-form text.
	Quantity      string `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecipeIngredient) Reset() {
	*x = RecipeIngredient{}
	mi := &file_frontendapi_frontend_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipeIngredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeIngredient) ProtoMessage() {}

func (x *RecipeIngredient) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeIngredient.ProtoReflect.Descriptor instead.
func (*RecipeIngredient) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{3}
}

func (x *RecipeIngredient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecipeIngredient) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

// A step in a recipe.
type RecipeStep struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The description of the step.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// An image for the step.
	ImageUrl      string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecipeStep) Reset() {
	*x = RecipeStep{}
	mi := &file_frontendapi_frontend_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipeStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeStep) ProtoMessage() {}

func (x *RecipeStep) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeStep.ProtoReflect.Descriptor instead.
func (*RecipeStep) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{4}
}

func (x *RecipeStep) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RecipeStep) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// A section of ingredients in a recipe.
type IngredientSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The title of the ingredient section.
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// The ingredients in the section.
	Ingredients   []*RecipeIngredient `protobuf:"bytes,2,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngredientSection) Reset() {
	*x = IngredientSection{}
	mi := &file_frontendapi_frontend_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngredientSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngredientSection) ProtoMessage() {}

func (x *IngredientSection) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngredientSection.ProtoReflect.Descriptor instead.
func (*IngredientSection) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{5}
}

func (x *IngredientSection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IngredientSection) GetIngredients() []*RecipeIngredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

// Full details of a recipe.
type Recipe struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the recipe within cookchat.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The source of the recipe.
	Source RecipeSource `protobuf:"varint,2,opt,name=source,proto3,enum=frontendapi.RecipeSource" json:"source,omitempty"`
	// The title of the recipe.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// The URL for the main image of the recipe.
	ImageUrl string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// The description of the recipe.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// The main ingredients of the recipe.
	Ingredients []*RecipeIngredient `protobuf:"bytes,6,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	// Additional ingredients grouped into sections.
	AdditionalIngredients []*IngredientSection `protobuf:"bytes,7,rep,name=additional_ingredients,json=additionalIngredients,proto3" json:"additional_ingredients,omitempty"`
	// The steps to prepare the recipe.
	Steps []*RecipeStep `protobuf:"bytes,8,rep,name=steps,proto3" json:"steps,omitempty"`
	// Additional notes or comments about the recipe.
	Notes string `protobuf:"bytes,9,opt,name=notes,proto3" json:"notes,omitempty"`
	// The serving size of the recipe as free-form text.
	ServingSize string `protobuf:"bytes,10,opt,name=serving_size,json=servingSize,proto3" json:"serving_size,omitempty"`
	// The language of the recipe.
	Language      Language `protobuf:"varint,11,opt,name=language,proto3,enum=frontendapi.Language" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	mi := &file_frontendapi_frontend_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{6}
}

func (x *Recipe) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Recipe) GetSource() RecipeSource {
	if x != nil {
		return x.Source
	}
	return RecipeSource_RECIPE_SOURCE_UNSPECIFIED
}

func (x *Recipe) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Recipe) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Recipe) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Recipe) GetIngredients() []*RecipeIngredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *Recipe) GetAdditionalIngredients() []*IngredientSection {
	if x != nil {
		return x.AdditionalIngredients
	}
	return nil
}

func (x *Recipe) GetSteps() []*RecipeStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *Recipe) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Recipe) GetServingSize() string {
	if x != nil {
		return x.ServingSize
	}
	return ""
}

func (x *Recipe) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_LANGUAGE_UNSPECIFIED
}

// A request for FrontendService.GetRecipe.
type GetRecipeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the recipe to get.
	RecipeId      string `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecipeRequest) Reset() {
	*x = GetRecipeRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeRequest) ProtoMessage() {}

func (x *GetRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeRequest.ProtoReflect.Descriptor instead.
func (*GetRecipeRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{7}
}

func (x *GetRecipeRequest) GetRecipeId() string {
	if x != nil {
		return x.RecipeId
	}
	return ""
}

// A response for FrontendService.GetRecipe.
type GetRecipeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The requested recipe.
	Recipe *Recipe `protobuf:"bytes,1,opt,name=recipe,proto3" json:"recipe,omitempty"`
	// The LLM prompt used to interact with the recipe.
	// Only returned for users with debugging access.
	LlmPrompt string `protobuf:"bytes,2,opt,name=llm_prompt,json=llmPrompt,proto3" json:"llm_prompt,omitempty"`
	// Whether the recipe is bookmarked by the user.
	IsBookmarked  bool `protobuf:"varint,3,opt,name=is_bookmarked,json=isBookmarked,proto3" json:"is_bookmarked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecipeResponse) Reset() {
	*x = GetRecipeResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeResponse) ProtoMessage() {}

func (x *GetRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeResponse.ProtoReflect.Descriptor instead.
func (*GetRecipeResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{8}
}

func (x *GetRecipeResponse) GetRecipe() *Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

func (x *GetRecipeResponse) GetLlmPrompt() string {
	if x != nil {
		return x.LlmPrompt
	}
	return ""
}

func (x *GetRecipeResponse) GetIsBookmarked() bool {
	if x != nil {
		return x.IsBookmarked
	}
	return false
}

// A token returned to retrieve a subsequent page of items.
type Pagination struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	LastId             string                 `protobuf:"bytes,1,opt,name=last_id,json=lastId,proto3" json:"last_id,omitempty"`
	LastTimestampNanos int64                  `protobuf:"varint,2,opt,name=last_timestamp_nanos,json=lastTimestampNanos,proto3" json:"last_timestamp_nanos,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_frontendapi_frontend_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{9}
}

func (x *Pagination) GetLastId() string {
	if x != nil {
		return x.LastId
	}
	return ""
}

func (x *Pagination) GetLastTimestampNanos() int64 {
	if x != nil {
		return x.LastTimestampNanos
	}
	return 0
}

// A snippet of a recipe for list views.
type RecipeSnippet struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the recipe.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The title of the recipe.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The summary of the recipe.
	Summary string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	// The image URL of the recipe.
	ImageUrl      string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecipeSnippet) Reset() {
	*x = RecipeSnippet{}
	mi := &file_frontendapi_frontend_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipeSnippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeSnippet) ProtoMessage() {}

func (x *RecipeSnippet) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeSnippet.ProtoReflect.Descriptor instead.
func (*RecipeSnippet) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{10}
}

func (x *RecipeSnippet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RecipeSnippet) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RecipeSnippet) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *RecipeSnippet) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// A request for FrontendService.ListRecipes.
type ListRecipesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A text query to filter by.
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Whether to only return bookmarked recipes.
	Bookmarks bool `protobuf:"varint,3,opt,name=bookmarks,proto3" json:"bookmarks,omitempty"`
	// The pagination token for the next page of recipes.
	// If unset, the first page is returned.
	Pagination    *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRecipesRequest) Reset() {
	*x = ListRecipesRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRecipesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecipesRequest) ProtoMessage() {}

func (x *ListRecipesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecipesRequest.ProtoReflect.Descriptor instead.
func (*ListRecipesRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{11}
}

func (x *ListRecipesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListRecipesRequest) GetBookmarks() bool {
	if x != nil {
		return x.Bookmarks
	}
	return false
}

func (x *ListRecipesRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// A response for FrontendService.ListRecipes.
type ListRecipesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The recipes.
	Recipes []*RecipeSnippet `protobuf:"bytes,1,rep,name=recipes,proto3" json:"recipes,omitempty"`
	// The pagination token for the next page of recipes.
	Pagination    *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRecipesResponse) Reset() {
	*x = ListRecipesResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRecipesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecipesResponse) ProtoMessage() {}

func (x *ListRecipesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecipesResponse.ProtoReflect.Descriptor instead.
func (*ListRecipesResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{12}
}

func (x *ListRecipesResponse) GetRecipes() []*RecipeSnippet {
	if x != nil {
		return x.Recipes
	}
	return nil
}

func (x *ListRecipesResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// A request to start a chat session.
type StartChatRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The recipe to chat about.
	//
	// Types that are valid to be assigned to Recipe:
	//
	//	*StartChatRequest_RecipeText
	//	*StartChatRequest_RecipeId
	Recipe isStartChatRequest_Recipe `protobuf_oneof:"recipe"`
	// The model provider to use for the chat.
	ModelProvider StartChatRequest_ModelProvider `protobuf:"varint,4,opt,name=model_provider,json=modelProvider,proto3,enum=frontendapi.StartChatRequest_ModelProvider" json:"model_provider,omitempty"`
	// The prompt to use with the chat.
	// Only recognized for users with debugging access.
	LlmPrompt     string `protobuf:"bytes,5,opt,name=llm_prompt,json=llmPrompt,proto3" json:"llm_prompt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartChatRequest) Reset() {
	*x = StartChatRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChatRequest) ProtoMessage() {}

func (x *StartChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChatRequest.ProtoReflect.Descriptor instead.
func (*StartChatRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{13}
}

func (x *StartChatRequest) GetRecipe() isStartChatRequest_Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

func (x *StartChatRequest) GetRecipeText() string {
	if x != nil {
		if x, ok := x.Recipe.(*StartChatRequest_RecipeText); ok {
			return x.RecipeText
		}
	}
	return ""
}

func (x *StartChatRequest) GetRecipeId() string {
	if x != nil {
		if x, ok := x.Recipe.(*StartChatRequest_RecipeId); ok {
			return x.RecipeId
		}
	}
	return ""
}

func (x *StartChatRequest) GetModelProvider() StartChatRequest_ModelProvider {
	if x != nil {
		return x.ModelProvider
	}
	return StartChatRequest_MODEL_PROVIDER_UNSPECIFIED
}

func (x *StartChatRequest) GetLlmPrompt() string {
	if x != nil {
		return x.LlmPrompt
	}
	return ""
}

type isStartChatRequest_Recipe interface {
	isStartChatRequest_Recipe()
}

type StartChatRequest_RecipeText struct {
	// Free-form text of the recipe.
	RecipeText string `protobuf:"bytes,2,opt,name=recipe_text,json=recipeText,proto3,oneof"`
}

type StartChatRequest_RecipeId struct {
	// The ID of a cookchat recipe.
	RecipeId string `protobuf:"bytes,3,opt,name=recipe_id,json=recipeId,proto3,oneof"`
}

func (*StartChatRequest_RecipeText) isStartChatRequest_Recipe() {}

func (*StartChatRequest_RecipeId) isStartChatRequest_Recipe() {}

// A response to start a chat session.
type StartChatResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ephemeral API key to use to start the chat.
	ChatApiKey string `protobuf:"bytes,1,opt,name=chat_api_key,json=chatApiKey,proto3" json:"chat_api_key,omitempty"`
	// The chat model to use for the session.
	ChatModel string `protobuf:"bytes,2,opt,name=chat_model,json=chatModel,proto3" json:"chat_model,omitempty"`
	// Instructions for the chat session.
	ChatInstructions string `protobuf:"bytes,3,opt,name=chat_instructions,json=chatInstructions,proto3" json:"chat_instructions,omitempty"`
	// The message to send to start the voice chat.
	StartMessage  string `protobuf:"bytes,4,opt,name=start_message,json=startMessage,proto3" json:"start_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartChatResponse) Reset() {
	*x = StartChatResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChatResponse) ProtoMessage() {}

func (x *StartChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChatResponse.ProtoReflect.Descriptor instead.
func (*StartChatResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{14}
}

func (x *StartChatResponse) GetChatApiKey() string {
	if x != nil {
		return x.ChatApiKey
	}
	return ""
}

func (x *StartChatResponse) GetChatModel() string {
	if x != nil {
		return x.ChatModel
	}
	return ""
}

func (x *StartChatResponse) GetChatInstructions() string {
	if x != nil {
		return x.ChatInstructions
	}
	return ""
}

func (x *StartChatResponse) GetStartMessage() string {
	if x != nil {
		return x.StartMessage
	}
	return ""
}

type AddRecipeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The title of the recipe.
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// The main image of the recipe, as a data URL.
	MainImageDataUrl string `protobuf:"bytes,2,opt,name=main_image_data_url,json=mainImageDataUrl,proto3" json:"main_image_data_url,omitempty"`
	// The description of the recipe.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The main ingredients of the recipe.
	Ingredients []*RecipeIngredient `protobuf:"bytes,4,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	// Additional ingredients grouped into sections.
	AdditionalIngredients []*IngredientSection `protobuf:"bytes,5,rep,name=additional_ingredients,json=additionalIngredients,proto3" json:"additional_ingredients,omitempty"`
	// The steps to prepare the recipe.
	Steps []*AddRecipeRequest_AddRecipeStep `protobuf:"bytes,6,rep,name=steps,proto3" json:"steps,omitempty"`
	// The serving size of the recipe as free-form text.
	ServingSize string `protobuf:"bytes,7,opt,name=serving_size,json=servingSize,proto3" json:"serving_size,omitempty"`
	// The language of the recipe.
	Language      Language `protobuf:"varint,8,opt,name=language,proto3,enum=frontendapi.Language" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRecipeRequest) Reset() {
	*x = AddRecipeRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecipeRequest) ProtoMessage() {}

func (x *AddRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecipeRequest.ProtoReflect.Descriptor instead.
func (*AddRecipeRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{15}
}

func (x *AddRecipeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddRecipeRequest) GetMainImageDataUrl() string {
	if x != nil {
		return x.MainImageDataUrl
	}
	return ""
}

func (x *AddRecipeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddRecipeRequest) GetIngredients() []*RecipeIngredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *AddRecipeRequest) GetAdditionalIngredients() []*IngredientSection {
	if x != nil {
		return x.AdditionalIngredients
	}
	return nil
}

func (x *AddRecipeRequest) GetSteps() []*AddRecipeRequest_AddRecipeStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *AddRecipeRequest) GetServingSize() string {
	if x != nil {
		return x.ServingSize
	}
	return ""
}

func (x *AddRecipeRequest) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_LANGUAGE_UNSPECIFIED
}

type AddRecipeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the newly added recipe.
	RecipeId      string `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRecipeResponse) Reset() {
	*x = AddRecipeResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecipeResponse) ProtoMessage() {}

func (x *AddRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecipeResponse.ProtoReflect.Descriptor instead.
func (*AddRecipeResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{16}
}

func (x *AddRecipeResponse) GetRecipeId() string {
	if x != nil {
		return x.RecipeId
	}
	return ""
}

// A request for FrontendService.GenerateRecipe.
type GenerateRecipeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The prompt to generate a recipe for.
	Prompt        string `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateRecipeRequest) Reset() {
	*x = GenerateRecipeRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRecipeRequest) ProtoMessage() {}

func (x *GenerateRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRecipeRequest.ProtoReflect.Descriptor instead.
func (*GenerateRecipeRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{17}
}

func (x *GenerateRecipeRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

// A response for FrontendService.GenerateRecipe.
type GenerateRecipeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A request to add a recipe, prepopulated with generated content.
	AddRecipeRequest *AddRecipeRequest `protobuf:"bytes,1,opt,name=add_recipe_request,json=addRecipeRequest,proto3" json:"add_recipe_request,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GenerateRecipeResponse) Reset() {
	*x = GenerateRecipeResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRecipeResponse) ProtoMessage() {}

func (x *GenerateRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRecipeResponse.ProtoReflect.Descriptor instead.
func (*GenerateRecipeResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{18}
}

func (x *GenerateRecipeResponse) GetAddRecipeRequest() *AddRecipeRequest {
	if x != nil {
		return x.AddRecipeRequest
	}
	return nil
}

// A request for FrontendService.GeneratePlan.
type GeneratePlanRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of days to plan for.
	NumDays uint32 `protobuf:"varint,1,opt,name=num_days,json=numDays,proto3" json:"num_days,omitempty"`
	// Ingredients to include in the plan.
	Ingredients []string `protobuf:"bytes,2,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	// Genres to prioritize during planning.
	Genres []RecipeGenre `protobuf:"varint,3,rep,packed,name=genres,proto3,enum=frontendapi.RecipeGenre" json:"genres,omitempty"`
	// Recipe IDs to use as main dishes.
	RecipeIds     []string `protobuf:"bytes,4,rep,name=recipe_ids,json=recipeIds,proto3" json:"recipe_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeneratePlanRequest) Reset() {
	*x = GeneratePlanRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePlanRequest) ProtoMessage() {}

func (x *GeneratePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePlanRequest.ProtoReflect.Descriptor instead.
func (*GeneratePlanRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{19}
}

func (x *GeneratePlanRequest) GetNumDays() uint32 {
	if x != nil {
		return x.NumDays
	}
	return 0
}

func (x *GeneratePlanRequest) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *GeneratePlanRequest) GetGenres() []RecipeGenre {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *GeneratePlanRequest) GetRecipeIds() []string {
	if x != nil {
		return x.RecipeIds
	}
	return nil
}

// A response for FrontendService.GeneratePlan.
type GeneratePlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeneratePlanResponse) Reset() {
	*x = GeneratePlanResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratePlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePlanResponse) ProtoMessage() {}

func (x *GeneratePlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePlanResponse.ProtoReflect.Descriptor instead.
func (*GeneratePlanResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{20}
}

// A group of steps within a plan that can be executed together.
type StepGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The label of the group.
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// The actual steps.
	Steps []*RecipeStep `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	// Useful note for the group.
	Note          string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepGroup) Reset() {
	*x = StepGroup{}
	mi := &file_frontendapi_frontend_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepGroup) ProtoMessage() {}

func (x *StepGroup) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepGroup.ProtoReflect.Descriptor instead.
func (*StepGroup) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{21}
}

func (x *StepGroup) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *StepGroup) GetSteps() []*RecipeStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *StepGroup) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

// A snippet of a plan, without executiond details.
type PlanSnippet struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The date of the plan. The timestamp will begin on the date in UTC.
	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// The recipes for the plan.
	Recipes       []*RecipeSnippet `protobuf:"bytes,2,rep,name=recipes,proto3" json:"recipes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanSnippet) Reset() {
	*x = PlanSnippet{}
	mi := &file_frontendapi_frontend_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanSnippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanSnippet) ProtoMessage() {}

func (x *PlanSnippet) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanSnippet.ProtoReflect.Descriptor instead.
func (*PlanSnippet) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{22}
}

func (x *PlanSnippet) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *PlanSnippet) GetRecipes() []*RecipeSnippet {
	if x != nil {
		return x.Recipes
	}
	return nil
}

type GetPlansRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlansRequest) Reset() {
	*x = GetPlansRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlansRequest) ProtoMessage() {}

func (x *GetPlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlansRequest.ProtoReflect.Descriptor instead.
func (*GetPlansRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{23}
}

type GetPlansResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The users current plans.
	Plans         []*PlanSnippet `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlansResponse) Reset() {
	*x = GetPlansResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlansResponse) ProtoMessage() {}

func (x *GetPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlansResponse.ProtoReflect.Descriptor instead.
func (*GetPlansResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{24}
}

func (x *GetPlansResponse) GetPlans() []*PlanSnippet {
	if x != nil {
		return x.Plans
	}
	return nil
}

// A cooking plan.
type Plan struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The date of the plan. The timestamp will begin on the date in UTC.
	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// The recipes for the plan.
	Recipes []*RecipeSnippet `protobuf:"bytes,2,rep,name=recipes,proto3" json:"recipes,omitempty"`
	// The step groups for the plan.
	StepGroups []*StepGroup `protobuf:"bytes,3,rep,name=step_groups,json=stepGroups,proto3" json:"step_groups,omitempty"`
	// A list of notes to help cook the plan.
	Notes         []string `protobuf:"bytes,4,rep,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Plan) Reset() {
	*x = Plan{}
	mi := &file_frontendapi_frontend_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{25}
}

func (x *Plan) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Plan) GetRecipes() []*RecipeSnippet {
	if x != nil {
		return x.Recipes
	}
	return nil
}

func (x *Plan) GetStepGroups() []*StepGroup {
	if x != nil {
		return x.StepGroups
	}
	return nil
}

func (x *Plan) GetNotes() []string {
	if x != nil {
		return x.Notes
	}
	return nil
}

// A request for FrontendService.GetPlan.
type GetPlanRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The date of the plan. The timestamp will begin on the date in UTC.
	Date          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlanRequest) Reset() {
	*x = GetPlanRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanRequest) ProtoMessage() {}

func (x *GetPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanRequest.ProtoReflect.Descriptor instead.
func (*GetPlanRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{26}
}

func (x *GetPlanRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

// A response for FrontendService.GetPlan.
type GetPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plan          *Plan                  `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlanResponse) Reset() {
	*x = GetPlanResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanResponse) ProtoMessage() {}

func (x *GetPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanResponse.ProtoReflect.Descriptor instead.
func (*GetPlanResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{27}
}

func (x *GetPlanResponse) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

// A request for FrontendService.AddBookmark.
type AddBookmarkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the recipe to add a bookmark for.
	RecipeId      string `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBookmarkRequest) Reset() {
	*x = AddBookmarkRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBookmarkRequest) ProtoMessage() {}

func (x *AddBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBookmarkRequest.ProtoReflect.Descriptor instead.
func (*AddBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{28}
}

func (x *AddBookmarkRequest) GetRecipeId() string {
	if x != nil {
		return x.RecipeId
	}
	return ""
}

// A response for FrontendService.AddBookmark.
type AddBookmarkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBookmarkResponse) Reset() {
	*x = AddBookmarkResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBookmarkResponse) ProtoMessage() {}

func (x *AddBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBookmarkResponse.ProtoReflect.Descriptor instead.
func (*AddBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{29}
}

// A request for FrontendService.RemoveBookmark.
type RemoveBookmarkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the recipe to remove a bookmark for.
	RecipeId      string `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBookmarkRequest) Reset() {
	*x = RemoveBookmarkRequest{}
	mi := &file_frontendapi_frontend_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBookmarkRequest) ProtoMessage() {}

func (x *RemoveBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBookmarkRequest.ProtoReflect.Descriptor instead.
func (*RemoveBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{30}
}

func (x *RemoveBookmarkRequest) GetRecipeId() string {
	if x != nil {
		return x.RecipeId
	}
	return ""
}

// A response for FrontendService.RemoveBookmark.
type RemoveBookmarkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBookmarkResponse) Reset() {
	*x = RemoveBookmarkResponse{}
	mi := &file_frontendapi_frontend_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBookmarkResponse) ProtoMessage() {}

func (x *RemoveBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBookmarkResponse.ProtoReflect.Descriptor instead.
func (*RemoveBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{31}
}

type AddRecipeRequest_AddRecipeStep struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The description of the step.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// An image for the step, as a data URL.
	ImageDataUrl  string `protobuf:"bytes,2,opt,name=image_data_url,json=imageDataUrl,proto3" json:"image_data_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRecipeRequest_AddRecipeStep) Reset() {
	*x = AddRecipeRequest_AddRecipeStep{}
	mi := &file_frontendapi_frontend_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRecipeRequest_AddRecipeStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecipeRequest_AddRecipeStep) ProtoMessage() {}

func (x *AddRecipeRequest_AddRecipeStep) ProtoReflect() protoreflect.Message {
	mi := &file_frontendapi_frontend_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecipeRequest_AddRecipeStep.ProtoReflect.Descriptor instead.
func (*AddRecipeRequest_AddRecipeStep) Descriptor() ([]byte, []int) {
	return file_frontendapi_frontend_proto_rawDescGZIP(), []int{15, 0}
}

func (x *AddRecipeRequest_AddRecipeStep) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddRecipeRequest_AddRecipeStep) GetImageDataUrl() string {
	if x != nil {
		return x.ImageDataUrl
	}
	return ""
}

var File_frontendapi_frontend_proto protoreflect.FileDescriptor

const file_frontendapi_frontend_proto_rawDesc = "" +
	"\n" +
	"\x1afrontendapi/frontend.proto\x12\vfrontendapi\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"L\n" +
	"\vChatContent\x12\x1a\n" +
	"\amessage\x18\x01 \x01(\tH\x00R\amessage\x12\x16\n" +
	"\x05audio\x18\x02 \x01(\fH\x00R\x05audioB\t\n" +
	"\apayload\"\x8d\x01\n" +
	"\vChatRequest\x122\n" +
	"\acontent\x18\x01 \x01(\v2\x18.frontendapi.ChatContentR\acontent\x12!\n" +
	"\vrecipe_text\x18\x02 \x01(\tH\x00R\n" +
	"recipeText\x12\x1d\n" +
	"\trecipe_id\x18\x03 \x01(\tH\x00R\brecipeIdB\b\n" +
	"\x06recipe\"B\n" +
	"\fChatResponse\x122\n" +
	"\acontent\x18\x01 \x01(\v2\x18.frontendapi.ChatContentR\acontent\"B\n" +
	"\x10RecipeIngredient\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\tR\bquantity\"K\n" +
	"\n" +
	"RecipeStep\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12\x1b\n" +
	"\timage_url\x18\x02 \x01(\tR\bimageUrl\"j\n" +
	"\x11IngredientSection\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12?\n" +
	"\vingredients\x18\x02 \x03(\v2\x1d.frontendapi.RecipeIngredientR\vingredients\"\xd3\x03\n" +
	"\x06Recipe\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x121\n" +
	"\x06source\x18\x02 \x01(\x0e2\x19.frontendapi.RecipeSourceR\x06source\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x1b\n" +
	"\timage_url\x18\x04 \x01(\tR\bimageUrl\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12?\n" +
	"\vingredients\x18\x06 \x03(\v2\x1d.frontendapi.RecipeIngredientR\vingredients\x12U\n" +
	"\x16additional_ingredients\x18\a \x03(\v2\x1e.frontendapi.IngredientSectionR\x15additionalIngredients\x12-\n" +
	"\x05steps\x18\b \x03(\v2\x17.frontendapi.RecipeStepR\x05steps\x12\x14\n" +
	"\x05notes\x18\t \x01(\tR\x05notes\x12!\n" +
	"\fserving_size\x18\n" +
	" \x01(\tR\vservingSize\x121\n" +
	"\blanguage\x18\v \x01(\x0e2\x15.frontendapi.LanguageR\blanguage\"/\n" +
	"\x10GetRecipeRequest\x12\x1b\n" +
	"\trecipe_id\x18\x01 \x01(\tR\brecipeId\"\x84\x01\n" +
	"\x11GetRecipeResponse\x12+\n" +
	"\x06recipe\x18\x01 \x01(\v2\x13.frontendapi.RecipeR\x06recipe\x12\x1d\n" +
	"\n" +
	"llm_prompt\x18\x02 \x01(\tR\tllmPrompt\x12#\n" +
	"\ris_bookmarked\x18\x03 \x01(\bR\fisBookmarked\"W\n" +
	"\n" +
	"Pagination\x12\x17\n" +
	"\alast_id\x18\x01 \x01(\tR\x06lastId\x120\n" +
	"\x14last_timestamp_nanos\x18\x02 \x01(\x03R\x12lastTimestampNanos\"l\n" +
	"\rRecipeSnippet\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\asummary\x18\x03 \x01(\tR\asummary\x12\x1b\n" +
	"\timage_url\x18\x04 \x01(\tR\bimageUrl\"\x81\x01\n" +
	"\x12ListRecipesRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x1c\n" +
	"\tbookmarks\x18\x03 \x01(\bR\tbookmarks\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.frontendapi.PaginationR\n" +
	"pagination\"\x84\x01\n" +
	"\x13ListRecipesResponse\x124\n" +
	"\arecipes\x18\x01 \x03(\v2\x1a.frontendapi.RecipeSnippetR\arecipes\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.frontendapi.PaginationR\n" +
	"pagination\"\xbe\x02\n" +
	"\x10StartChatRequest\x12!\n" +
	"\vrecipe_text\x18\x02 \x01(\tH\x00R\n" +
	"recipeText\x12\x1d\n" +
	"\trecipe_id\x18\x03 \x01(\tH\x00R\brecipeId\x12R\n" +
	"\x0emodel_provider\x18\x04 \x01(\x0e2+.frontendapi.StartChatRequest.ModelProviderR\rmodelProvider\x12\x1d\n" +
	"\n" +
	"llm_prompt\x18\x05 \x01(\tR\tllmPrompt\"k\n" +
	"\rModelProvider\x12\x1e\n" +
	"\x1aMODEL_PROVIDER_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bMODEL_PROVIDER_GOOGLE_GENAI\x10\x01\x12\x19\n" +
	"\x15MODEL_PROVIDER_OPENAI\x10\x02B\b\n" +
	"\x06recipe\"\xa6\x01\n" +
	"\x11StartChatResponse\x12 \n" +
	"\fchat_api_key\x18\x01 \x01(\tR\n" +
	"chatApiKey\x12\x1d\n" +
	"\n" +
	"chat_model\x18\x02 \x01(\tR\tchatModel\x12+\n" +
	"\x11chat_instructions\x18\x03 \x01(\tR\x10chatInstructions\x12#\n" +
	"\rstart_message\x18\x04 \x01(\tR\fstartMessage\"\x83\x04\n" +
	"\x10AddRecipeRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12-\n" +
	"\x13main_image_data_url\x18\x02 \x01(\tR\x10mainImageDataUrl\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12?\n" +
	"\vingredients\x18\x04 \x03(\v2\x1d.frontendapi.RecipeIngredientR\vingredients\x12U\n" +
	"\x16additional_ingredients\x18\x05 \x03(\v2\x1e.frontendapi.IngredientSectionR\x15additionalIngredients\x12A\n" +
	"\x05steps\x18\x06 \x03(\v2+.frontendapi.AddRecipeRequest.AddRecipeStepR\x05steps\x12!\n" +
	"\fserving_size\x18\a \x01(\tR\vservingSize\x121\n" +
	"\blanguage\x18\b \x01(\x0e2\x15.frontendapi.LanguageR\blanguage\x1aW\n" +
	"\rAddRecipeStep\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12$\n" +
	"\x0eimage_data_url\x18\x02 \x01(\tR\fimageDataUrl\"0\n" +
	"\x11AddRecipeResponse\x12\x1b\n" +
	"\trecipe_id\x18\x01 \x01(\tR\brecipeId\"/\n" +
	"\x15GenerateRecipeRequest\x12\x16\n" +
	"\x06prompt\x18\x01 \x01(\tR\x06prompt\"e\n" +
	"\x16GenerateRecipeResponse\x12K\n" +
	"\x12add_recipe_request\x18\x01 \x01(\v2\x1d.frontendapi.AddRecipeRequestR\x10addRecipeRequest\"\xa3\x01\n" +
	"\x13GeneratePlanRequest\x12\x19\n" +
	"\bnum_days\x18\x01 \x01(\rR\anumDays\x12 \n" +
	"\vingredients\x18\x02 \x03(\tR\vingredients\x120\n" +
	"\x06genres\x18\x03 \x03(\x0e2\x18.frontendapi.RecipeGenreR\x06genres\x12\x1d\n" +
	"\n" +
	"recipe_ids\x18\x04 \x03(\tR\trecipeIds\"\x16\n" +
	"\x14GeneratePlanResponse\"d\n" +
	"\tStepGroup\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12-\n" +
	"\x05steps\x18\x02 \x03(\v2\x17.frontendapi.RecipeStepR\x05steps\x12\x12\n" +
	"\x04note\x18\x03 \x01(\tR\x04note\"{\n" +
	"\vPlanSnippet\x126\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\x04date\x124\n" +
	"\arecipes\x18\x02 \x03(\v2\x1a.frontendapi.RecipeSnippetR\arecipes\"\x11\n" +
	"\x0fGetPlansRequest\"B\n" +
	"\x10GetPlansResponse\x12.\n" +
	"\x05plans\x18\x01 \x03(\v2\x18.frontendapi.PlanSnippetR\x05plans\"\xc3\x01\n" +
	"\x04Plan\x126\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\x04date\x124\n" +
	"\arecipes\x18\x02 \x03(\v2\x1a.frontendapi.RecipeSnippetR\arecipes\x127\n" +
	"\vstep_groups\x18\x03 \x03(\v2\x16.frontendapi.StepGroupR\n" +
	"stepGroups\x12\x14\n" +
	"\x05notes\x18\x04 \x03(\tR\x05notes\"@\n" +
	"\x0eGetPlanRequest\x12.\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\"@\n" +
	"\x0fGetPlanResponse\x12-\n" +
	"\x04plan\x18\x01 \x01(\v2\x11.frontendapi.PlanB\x06\xbaH\x03\xc8\x01\x01R\x04plan\"1\n" +
	"\x12AddBookmarkRequest\x12\x1b\n" +
	"\trecipe_id\x18\x01 \x01(\tR\brecipeId\"\x15\n" +
	"\x13AddBookmarkResponse\"4\n" +
	"\x15RemoveBookmarkRequest\x12\x1b\n" +
	"\trecipe_id\x18\x01 \x01(\tR\brecipeId\"\x18\n" +
	"\x16RemoveBookmarkResponse*Q\n" +
	"\bLanguage\x12\x18\n" +
	"\x14LANGUAGE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10LANGUAGE_ENGLISH\x10\x01\x12\x15\n" +
	"\x11LANGUAGE_JAPANESE\x10\x02*\xc6\x01\n" +
	"\vRecipeGenre\x12\x1c\n" +
	"\x18RECIPE_GENRE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15RECIPE_GENRE_JAPANESE\x10\x01\x12\x18\n" +
	"\x14RECIPE_GENRE_CHINESE\x10\x02\x12\x18\n" +
	"\x14RECIPE_GENRE_WESTERN\x10\x03\x12\x17\n" +
	"\x13RECIPE_GENRE_KOREAN\x10\x04\x12\x18\n" +
	"\x14RECIPE_GENRE_ITALIAN\x10\x05\x12\x17\n" +
	"\x13RECIPE_GENRE_ETHNIC\x10\x06*H\n" +
	"\fRecipeSource\x12\x1d\n" +
	"\x19RECIPE_SOURCE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15RECIPE_SOURCE_COOKPAD\x10\x012N\n" +
	"\vChatService\x12?\n" +
	"\x04Chat\x12\x18.frontendapi.ChatRequest\x1a\x19.frontendapi.ChatResponse(\x010\x012\xb3\x06\n" +
	"\x0fFrontendService\x12J\n" +
	"\tGetRecipe\x12\x1d.frontendapi.GetRecipeRequest\x1a\x1e.frontendapi.GetRecipeResponse\x12P\n" +
	"\vListRecipes\x12\x1f.frontendapi.ListRecipesRequest\x1a .frontendapi.ListRecipesResponse\x12J\n" +
	"\tStartChat\x12\x1d.frontendapi.StartChatRequest\x1a\x1e.frontendapi.StartChatResponse\x12J\n" +
	"\tAddRecipe\x12\x1d.frontendapi.AddRecipeRequest\x1a\x1e.frontendapi.AddRecipeResponse\x12Y\n" +
	"\x0eGenerateRecipe\x12\".frontendapi.GenerateRecipeRequest\x1a#.frontendapi.GenerateRecipeResponse\x12S\n" +
	"\fGeneratePlan\x12 .frontendapi.GeneratePlanRequest\x1a!.frontendapi.GeneratePlanResponse\x12G\n" +
	"\bGetPlans\x12\x1c.frontendapi.GetPlansRequest\x1a\x1d.frontendapi.GetPlansResponse\x12D\n" +
	"\aGetPlan\x12\x1b.frontendapi.GetPlanRequest\x1a\x1c.frontendapi.GetPlanResponse\x12P\n" +
	"\vAddBookmark\x12\x1f.frontendapi.AddBookmarkRequest\x1a .frontendapi.AddBookmarkResponse\x12Y\n" +
	"\x0eRemoveBookmark\x12\".frontendapi.RemoveBookmarkRequest\x1a#.frontendapi.RemoveBookmarkResponseB=Z;github.com/curioswitch/cookchat/frontend/api/go;frontendapib\x06proto3"

var (
	file_frontendapi_frontend_proto_rawDescOnce sync.Once
	file_frontendapi_frontend_proto_rawDescData []byte
)

func file_frontendapi_frontend_proto_rawDescGZIP() []byte {
	file_frontendapi_frontend_proto_rawDescOnce.Do(func() {
		file_frontendapi_frontend_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_frontendapi_frontend_proto_rawDesc), len(file_frontendapi_frontend_proto_rawDesc)))
	})
	return file_frontendapi_frontend_proto_rawDescData
}

var file_frontendapi_frontend_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_frontendapi_frontend_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_frontendapi_frontend_proto_goTypes = []any{
	(Language)(0),                          // 0: frontendapi.Language
	(RecipeGenre)(0),                       // 1: frontendapi.RecipeGenre
	(RecipeSource)(0),                      // 2: frontendapi.RecipeSource
	(StartChatRequest_ModelProvider)(0),    // 3: frontendapi.StartChatRequest.ModelProvider
	(*ChatContent)(nil),                    // 4: frontendapi.ChatContent
	(*ChatRequest)(nil),                    // 5: frontendapi.ChatRequest
	(*ChatResponse)(nil),                   // 6: frontendapi.ChatResponse
	(*RecipeIngredient)(nil),               // 7: frontendapi.RecipeIngredient
	(*RecipeStep)(nil),                     // 8: frontendapi.RecipeStep
	(*IngredientSection)(nil),              // 9: frontendapi.IngredientSection
	(*Recipe)(nil),                         // 10: frontendapi.Recipe
	(*GetRecipeRequest)(nil),               // 11: frontendapi.GetRecipeRequest
	(*GetRecipeResponse)(nil),              // 12: frontendapi.GetRecipeResponse
	(*Pagination)(nil),                     // 13: frontendapi.Pagination
	(*RecipeSnippet)(nil),                  // 14: frontendapi.RecipeSnippet
	(*ListRecipesRequest)(nil),             // 15: frontendapi.ListRecipesRequest
	(*ListRecipesResponse)(nil),            // 16: frontendapi.ListRecipesResponse
	(*StartChatRequest)(nil),               // 17: frontendapi.StartChatRequest
	(*StartChatResponse)(nil),              // 18: frontendapi.StartChatResponse
	(*AddRecipeRequest)(nil),               // 19: frontendapi.AddRecipeRequest
	(*AddRecipeResponse)(nil),              // 20: frontendapi.AddRecipeResponse
	(*GenerateRecipeRequest)(nil),          // 21: frontendapi.GenerateRecipeRequest
	(*GenerateRecipeResponse)(nil),         // 22: frontendapi.GenerateRecipeResponse
	(*GeneratePlanRequest)(nil),            // 23: frontendapi.GeneratePlanRequest
	(*GeneratePlanResponse)(nil),           // 24: frontendapi.GeneratePlanResponse
	(*StepGroup)(nil),                      // 25: frontendapi.StepGroup
	(*PlanSnippet)(nil),                    // 26: frontendapi.PlanSnippet
	(*GetPlansRequest)(nil),                // 27: frontendapi.GetPlansRequest
	(*GetPlansResponse)(nil),               // 28: frontendapi.GetPlansResponse
	(*Plan)(nil),                           // 29: frontendapi.Plan
	(*GetPlanRequest)(nil),                 // 30: frontendapi.GetPlanRequest
	(*GetPlanResponse)(nil),                // 31: frontendapi.GetPlanResponse
	(*AddBookmarkRequest)(nil),             // 32: frontendapi.AddBookmarkRequest
	(*AddBookmarkResponse)(nil),            // 33: frontendapi.AddBookmarkResponse
	(*RemoveBookmarkRequest)(nil),          // 34: frontendapi.RemoveBookmarkRequest
	(*RemoveBookmarkResponse)(nil),         // 35: frontendapi.RemoveBookmarkResponse
	(*AddRecipeRequest_AddRecipeStep)(nil), // 36: frontendapi.AddRecipeRequest.AddRecipeStep
	(*timestamppb.Timestamp)(nil),          // 37: google.protobuf.Timestamp
}
var file_frontendapi_frontend_proto_depIdxs = []int32{
	4,  // 0: frontendapi.ChatRequest.content:type_name -> frontendapi.ChatContent
	4,  // 1: frontendapi.ChatResponse.content:type_name -> frontendapi.ChatContent
	7,  // 2: frontendapi.IngredientSection.ingredients:type_name -> frontendapi.RecipeIngredient
	2,  // 3: frontendapi.Recipe.source:type_name -> frontendapi.RecipeSource
	7,  // 4: frontendapi.Recipe.ingredients:type_name -> frontendapi.RecipeIngredient
	9,  // 5: frontendapi.Recipe.additional_ingredients:type_name -> frontendapi.IngredientSection
	8,  // 6: frontendapi.Recipe.steps:type_name -> frontendapi.RecipeStep
	0,  // 7: frontendapi.Recipe.language:type_name -> frontendapi.Language
	10, // 8: frontendapi.GetRecipeResponse.recipe:type_name -> frontendapi.Recipe
	13, // 9: frontendapi.ListRecipesRequest.pagination:type_name -> frontendapi.Pagination
	14, // 10: frontendapi.ListRecipesResponse.recipes:type_name -> frontendapi.RecipeSnippet
	13, // 11: frontendapi.ListRecipesResponse.pagination:type_name -> frontendapi.Pagination
	3,  // 12: frontendapi.StartChatRequest.model_provider:type_name -> frontendapi.StartChatRequest.ModelProvider
	7,  // 13: frontendapi.AddRecipeRequest.ingredients:type_name -> frontendapi.RecipeIngredient
	9,  // 14: frontendapi.AddRecipeRequest.additional_ingredients:type_name -> frontendapi.IngredientSection
	36, // 15: frontendapi.AddRecipeRequest.steps:type_name -> frontendapi.AddRecipeRequest.AddRecipeStep
	0,  // 16: frontendapi.AddRecipeRequest.language:type_name -> frontendapi.Language
	19, // 17: frontendapi.GenerateRecipeResponse.add_recipe_request:type_name -> frontendapi.AddRecipeRequest
	1,  // 18: frontendapi.GeneratePlanRequest.genres:type_name -> frontendapi.RecipeGenre
	8,  // 19: frontendapi.StepGroup.steps:type_name -> frontendapi.RecipeStep
	37, // 20: frontendapi.PlanSnippet.date:type_name -> google.protobuf.Timestamp
	14, // 21: frontendapi.PlanSnippet.recipes:type_name -> frontendapi.RecipeSnippet
	26, // 22: frontendapi.GetPlansResponse.plans:type_name -> frontendapi.PlanSnippet
	37, // 23: frontendapi.Plan.date:type_name -> google.protobuf.Timestamp
	14, // 24: frontendapi.Plan.recipes:type_name -> frontendapi.RecipeSnippet
	25, // 25: frontendapi.Plan.step_groups:type_name -> frontendapi.StepGroup
	37, // 26: frontendapi.GetPlanRequest.date:type_name -> google.protobuf.Timestamp
	29, // 27: frontendapi.GetPlanResponse.plan:type_name -> frontendapi.Plan
	5,  // 28: frontendapi.ChatService.Chat:input_type -> frontendapi.ChatRequest
	11, // 29: frontendapi.FrontendService.GetRecipe:input_type -> frontendapi.GetRecipeRequest
	15, // 30: frontendapi.FrontendService.ListRecipes:input_type -> frontendapi.ListRecipesRequest
	17, // 31: frontendapi.FrontendService.StartChat:input_type -> frontendapi.StartChatRequest
	19, // 32: frontendapi.FrontendService.AddRecipe:input_type -> frontendapi.AddRecipeRequest
	21, // 33: frontendapi.FrontendService.GenerateRecipe:input_type -> frontendapi.GenerateRecipeRequest
	23, // 34: frontendapi.FrontendService.GeneratePlan:input_type -> frontendapi.GeneratePlanRequest
	27, // 35: frontendapi.FrontendService.GetPlans:input_type -> frontendapi.GetPlansRequest
	30, // 36: frontendapi.FrontendService.GetPlan:input_type -> frontendapi.GetPlanRequest
	32, // 37: frontendapi.FrontendService.AddBookmark:input_type -> frontendapi.AddBookmarkRequest
	34, // 38: frontendapi.FrontendService.RemoveBookmark:input_type -> frontendapi.RemoveBookmarkRequest
	6,  // 39: frontendapi.ChatService.Chat:output_type -> frontendapi.ChatResponse
	12, // 40: frontendapi.FrontendService.GetRecipe:output_type -> frontendapi.GetRecipeResponse
	16, // 41: frontendapi.FrontendService.ListRecipes:output_type -> frontendapi.ListRecipesResponse
	18, // 42: frontendapi.FrontendService.StartChat:output_type -> frontendapi.StartChatResponse
	20, // 43: frontendapi.FrontendService.AddRecipe:output_type -> frontendapi.AddRecipeResponse
	22, // 44: frontendapi.FrontendService.GenerateRecipe:output_type -> frontendapi.GenerateRecipeResponse
	24, // 45: frontendapi.FrontendService.GeneratePlan:output_type -> frontendapi.GeneratePlanResponse
	28, // 46: frontendapi.FrontendService.GetPlans:output_type -> frontendapi.GetPlansResponse
	31, // 47: frontendapi.FrontendService.GetPlan:output_type -> frontendapi.GetPlanResponse
	33, // 48: frontendapi.FrontendService.AddBookmark:output_type -> frontendapi.AddBookmarkResponse
	35, // 49: frontendapi.FrontendService.RemoveBookmark:output_type -> frontendapi.RemoveBookmarkResponse
	39, // [39:50] is the sub-list for method output_type
	28, // [28:39] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_frontendapi_frontend_proto_init() }
func file_frontendapi_frontend_proto_init() {
	if File_frontendapi_frontend_proto != nil {
		return
	}
	file_frontendapi_frontend_proto_msgTypes[0].OneofWrappers = []any{
		(*ChatContent_Message)(nil),
		(*ChatContent_Audio)(nil),
	}
	file_frontendapi_frontend_proto_msgTypes[1].OneofWrappers = []any{
		(*ChatRequest_RecipeText)(nil),
		(*ChatRequest_RecipeId)(nil),
	}
	file_frontendapi_frontend_proto_msgTypes[13].OneofWrappers = []any{
		(*StartChatRequest_RecipeText)(nil),
		(*StartChatRequest_RecipeId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_frontendapi_frontend_proto_rawDesc), len(file_frontendapi_frontend_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_frontendapi_frontend_proto_goTypes,
		DependencyIndexes: file_frontendapi_frontend_proto_depIdxs,
		EnumInfos:         file_frontendapi_frontend_proto_enumTypes,
		MessageInfos:      file_frontendapi_frontend_proto_msgTypes,
	}.Build()
	File_frontendapi_frontend_proto = out.File
	file_frontendapi_frontend_proto_goTypes = nil
	file_frontendapi_frontend_proto_depIdxs = nil
}
