// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file frontendapi/frontend.proto (package frontendapi, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file frontendapi/frontend.proto.
 */
export const file_frontendapi_frontend: GenFile = /*@__PURE__*/
  fileDesc("Chpmcm9udGVuZGFwaS9mcm9udGVuZC5wcm90bxILZnJvbnRlbmRhcGkiPAoLQ2hhdENvbnRlbnQSEQoHbWVzc2FnZRgBIAEoCUgAEg8KBWF1ZGlvGAIgASgMSABCCQoHcGF5bG9hZCJuCgtDaGF0UmVxdWVzdBIpCgdjb250ZW50GAEgASgLMhguZnJvbnRlbmRhcGkuQ2hhdENvbnRlbnQSFQoLcmVjaXBlX3RleHQYAiABKAlIABITCglyZWNpcGVfaWQYAyABKAlIAEIICgZyZWNpcGUiOQoMQ2hhdFJlc3BvbnNlEikKB2NvbnRlbnQYASABKAsyGC5mcm9udGVuZGFwaS5DaGF0Q29udGVudCIyChBSZWNpcGVJbmdyZWRpZW50EgwKBG5hbWUYASABKAkSEAoIcXVhbnRpdHkYAiABKAkiNAoKUmVjaXBlU3RlcBITCgtkZXNjcmlwdGlvbhgBIAEoCRIRCglpbWFnZV91cmwYAiABKAkiVgoRSW5ncmVkaWVudFNlY3Rpb24SDQoFdGl0bGUYASABKAkSMgoLaW5ncmVkaWVudHMYAiADKAsyHS5mcm9udGVuZGFwaS5SZWNpcGVJbmdyZWRpZW50IuACCgZSZWNpcGUSCgoCaWQYASABKAkSKQoGc291cmNlGAIgASgOMhkuZnJvbnRlbmRhcGkuUmVjaXBlU291cmNlEg0KBXRpdGxlGAMgASgJEhEKCWltYWdlX3VybBgEIAEoCRITCgtkZXNjcmlwdGlvbhgFIAEoCRIyCgtpbmdyZWRpZW50cxgGIAMoCzIdLmZyb250ZW5kYXBpLlJlY2lwZUluZ3JlZGllbnQSPgoWYWRkaXRpb25hbF9pbmdyZWRpZW50cxgHIAMoCzIeLmZyb250ZW5kYXBpLkluZ3JlZGllbnRTZWN0aW9uEiYKBXN0ZXBzGAggAygLMhcuZnJvbnRlbmRhcGkuUmVjaXBlU3RlcBINCgVub3RlcxgJIAEoCRIUCgxzZXJ2aW5nX3NpemUYCiABKAkSJwoIbGFuZ3VhZ2UYCyABKA4yFS5mcm9udGVuZGFwaS5MYW5ndWFnZSIlChBHZXRSZWNpcGVSZXF1ZXN0EhEKCXJlY2lwZV9pZBgBIAEoCSI4ChFHZXRSZWNpcGVSZXNwb25zZRIjCgZyZWNpcGUYASABKAsyEy5mcm9udGVuZGFwaS5SZWNpcGUiHQoKUGFnaW5hdGlvbhIPCgdsYXN0X2lkGAEgASgJIk4KDVJlY2lwZVNuaXBwZXQSCgoCaWQYASABKAkSDQoFdGl0bGUYAiABKAkSDwoHc3VtbWFyeRgDIAEoCRIRCglpbWFnZV91cmwYBCABKAkiUAoSTGlzdFJlY2lwZXNSZXF1ZXN0Eg0KBXF1ZXJ5GAEgASgJEisKCnBhZ2luYXRpb24YAiABKAsyFy5mcm9udGVuZGFwaS5QYWdpbmF0aW9uIm8KE0xpc3RSZWNpcGVzUmVzcG9uc2USKwoHcmVjaXBlcxgBIAMoCzIaLmZyb250ZW5kYXBpLlJlY2lwZVNuaXBwZXQSKwoKcGFnaW5hdGlvbhgCIAEoCzIXLmZyb250ZW5kYXBpLlBhZ2luYXRpb24i+gEKEFN0YXJ0Q2hhdFJlcXVlc3QSFQoLcmVjaXBlX3RleHQYAiABKAlIABITCglyZWNpcGVfaWQYAyABKAlIABJDCg5tb2RlbF9wcm92aWRlchgEIAEoDjIrLmZyb250ZW5kYXBpLlN0YXJ0Q2hhdFJlcXVlc3QuTW9kZWxQcm92aWRlciJrCg1Nb2RlbFByb3ZpZGVyEh4KGk1PREVMX1BST1ZJREVSX1VOU1BFQ0lGSUVEEAASHwobTU9ERUxfUFJPVklERVJfR09PR0xFX0dFTkFJEAESGQoVTU9ERUxfUFJPVklERVJfT1BFTkFJEAJCCAoGcmVjaXBlIlgKEVN0YXJ0Q2hhdFJlc3BvbnNlEhQKDGNoYXRfYXBpX2tleRgBIAEoCRISCgpjaGF0X21vZGVsGAIgASgJEhkKEWNoYXRfaW5zdHJ1Y3Rpb25zGAMgASgJKlEKCExhbmd1YWdlEhgKFExBTkdVQUdFX1VOU1BFQ0lGSUVEEAASFAoQTEFOR1VBR0VfRU5HTElTSBABEhUKEUxBTkdVQUdFX0pBUEFORVNFEAIqSAoMUmVjaXBlU291cmNlEh0KGVJFQ0lQRV9TT1VSQ0VfVU5TUEVDSUZJRUQQABIZChVSRUNJUEVfU09VUkNFX0NPT0tQQUQQATJOCgtDaGF0U2VydmljZRI/CgRDaGF0EhguZnJvbnRlbmRhcGkuQ2hhdFJlcXVlc3QaGS5mcm9udGVuZGFwaS5DaGF0UmVzcG9uc2UoATABMvsBCg9Gcm9udGVuZFNlcnZpY2USSgoJR2V0UmVjaXBlEh0uZnJvbnRlbmRhcGkuR2V0UmVjaXBlUmVxdWVzdBoeLmZyb250ZW5kYXBpLkdldFJlY2lwZVJlc3BvbnNlElAKC0xpc3RSZWNpcGVzEh8uZnJvbnRlbmRhcGkuTGlzdFJlY2lwZXNSZXF1ZXN0GiAuZnJvbnRlbmRhcGkuTGlzdFJlY2lwZXNSZXNwb25zZRJKCglTdGFydENoYXQSHS5mcm9udGVuZGFwaS5TdGFydENoYXRSZXF1ZXN0Gh4uZnJvbnRlbmRhcGkuU3RhcnRDaGF0UmVzcG9uc2VCPVo7Z2l0aHViLmNvbS9jdXJpb3N3aXRjaC9jb29rY2hhdC9mcm9udGVuZC9hcGkvZ287ZnJvbnRlbmRhcGliBnByb3RvMw");

/**
 * The content of a chat message.
 *
 * @generated from message frontendapi.ChatContent
 */
export type ChatContent = Message<"frontendapi.ChatContent"> & {
  /**
   * @generated from oneof frontendapi.ChatContent.payload
   */
  payload: {
    /**
     * A text message.
     *
     * @generated from field: string message = 1;
     */
    value: string;
    case: "message";
  } | {
    /**
     * An audio message.
     *
     * @generated from field: bytes audio = 2;
     */
    value: Uint8Array;
    case: "audio";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message frontendapi.ChatContent.
 * Use `create(ChatContentSchema)` to create a new message.
 */
export const ChatContentSchema: GenMessage<ChatContent> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 0);

/**
 * A request to send in a chat.
 *
 * @generated from message frontendapi.ChatRequest
 */
export type ChatRequest = Message<"frontendapi.ChatRequest"> & {
  /**
   * The content of the chat message.
   *
   * @generated from field: frontendapi.ChatContent content = 1;
   */
  content?: ChatContent;

  /**
   * The recipe to chat about.
   *
   * @generated from oneof frontendapi.ChatRequest.recipe
   */
  recipe: {
    /**
     * Free-form text of the recipe.
     *
     * @generated from field: string recipe_text = 2;
     */
    value: string;
    case: "recipeText";
  } | {
    /**
     * The ID of a cookchat recipe.
     *
     * @generated from field: string recipe_id = 3;
     */
    value: string;
    case: "recipeId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message frontendapi.ChatRequest.
 * Use `create(ChatRequestSchema)` to create a new message.
 */
export const ChatRequestSchema: GenMessage<ChatRequest> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 1);

/**
 * A response in a chat.
 *
 * @generated from message frontendapi.ChatResponse
 */
export type ChatResponse = Message<"frontendapi.ChatResponse"> & {
  /**
   * The content of the chat message.
   *
   * @generated from field: frontendapi.ChatContent content = 1;
   */
  content?: ChatContent;
};

/**
 * Describes the message frontendapi.ChatResponse.
 * Use `create(ChatResponseSchema)` to create a new message.
 */
export const ChatResponseSchema: GenMessage<ChatResponse> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 2);

/**
 * An ingredient in a recipe.
 *
 * @generated from message frontendapi.RecipeIngredient
 */
export type RecipeIngredient = Message<"frontendapi.RecipeIngredient"> & {
  /**
   * The name of the ingredient.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The quantity of the ingredient as free-form text.
   *
   * @generated from field: string quantity = 2;
   */
  quantity: string;
};

/**
 * Describes the message frontendapi.RecipeIngredient.
 * Use `create(RecipeIngredientSchema)` to create a new message.
 */
export const RecipeIngredientSchema: GenMessage<RecipeIngredient> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 3);

/**
 * A step in a recipe.
 *
 * @generated from message frontendapi.RecipeStep
 */
export type RecipeStep = Message<"frontendapi.RecipeStep"> & {
  /**
   * The description of the step.
   *
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * An image for the step.
   *
   * @generated from field: string image_url = 2;
   */
  imageUrl: string;
};

/**
 * Describes the message frontendapi.RecipeStep.
 * Use `create(RecipeStepSchema)` to create a new message.
 */
export const RecipeStepSchema: GenMessage<RecipeStep> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 4);

/**
 * A section of ingredients in a recipe.
 *
 * @generated from message frontendapi.IngredientSection
 */
export type IngredientSection = Message<"frontendapi.IngredientSection"> & {
  /**
   * The title of the ingredient section.
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * The ingredients in the section.
   *
   * @generated from field: repeated frontendapi.RecipeIngredient ingredients = 2;
   */
  ingredients: RecipeIngredient[];
};

/**
 * Describes the message frontendapi.IngredientSection.
 * Use `create(IngredientSectionSchema)` to create a new message.
 */
export const IngredientSectionSchema: GenMessage<IngredientSection> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 5);

/**
 * Full details of a recipe.
 *
 * @generated from message frontendapi.Recipe
 */
export type Recipe = Message<"frontendapi.Recipe"> & {
  /**
   * The unique identifier of the recipe within cookchat.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The source of the recipe.
   *
   * @generated from field: frontendapi.RecipeSource source = 2;
   */
  source: RecipeSource;

  /**
   * The title of the recipe.
   *
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * The URL for the main image of the recipe.
   *
   * @generated from field: string image_url = 4;
   */
  imageUrl: string;

  /**
   * The description of the recipe.
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * The main ingredients of the recipe.
   *
   * @generated from field: repeated frontendapi.RecipeIngredient ingredients = 6;
   */
  ingredients: RecipeIngredient[];

  /**
   * Additional ingredients grouped into sections.
   *
   * @generated from field: repeated frontendapi.IngredientSection additional_ingredients = 7;
   */
  additionalIngredients: IngredientSection[];

  /**
   * The steps to prepare the recipe.
   *
   * @generated from field: repeated frontendapi.RecipeStep steps = 8;
   */
  steps: RecipeStep[];

  /**
   * Additional notes or comments about the recipe.
   *
   * @generated from field: string notes = 9;
   */
  notes: string;

  /**
   * The serving size of the recipe as free-form text.
   *
   * @generated from field: string serving_size = 10;
   */
  servingSize: string;

  /**
   * The language of the recipe.
   *
   * @generated from field: frontendapi.Language language = 11;
   */
  language: Language;
};

/**
 * Describes the message frontendapi.Recipe.
 * Use `create(RecipeSchema)` to create a new message.
 */
export const RecipeSchema: GenMessage<Recipe> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 6);

/**
 * A request for FrontendService.GetRecipe.
 *
 * @generated from message frontendapi.GetRecipeRequest
 */
export type GetRecipeRequest = Message<"frontendapi.GetRecipeRequest"> & {
  /**
   * The ID of the recipe to get.
   *
   * @generated from field: string recipe_id = 1;
   */
  recipeId: string;
};

/**
 * Describes the message frontendapi.GetRecipeRequest.
 * Use `create(GetRecipeRequestSchema)` to create a new message.
 */
export const GetRecipeRequestSchema: GenMessage<GetRecipeRequest> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 7);

/**
 * A response for FrontendService.GetRecipe.
 *
 * @generated from message frontendapi.GetRecipeResponse
 */
export type GetRecipeResponse = Message<"frontendapi.GetRecipeResponse"> & {
  /**
   * The requested recipe.
   *
   * @generated from field: frontendapi.Recipe recipe = 1;
   */
  recipe?: Recipe;
};

/**
 * Describes the message frontendapi.GetRecipeResponse.
 * Use `create(GetRecipeResponseSchema)` to create a new message.
 */
export const GetRecipeResponseSchema: GenMessage<GetRecipeResponse> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 8);

/**
 * A token returned to retrieve a subsequent page of items.
 *
 * @generated from message frontendapi.Pagination
 */
export type Pagination = Message<"frontendapi.Pagination"> & {
  /**
   * @generated from field: string last_id = 1;
   */
  lastId: string;
};

/**
 * Describes the message frontendapi.Pagination.
 * Use `create(PaginationSchema)` to create a new message.
 */
export const PaginationSchema: GenMessage<Pagination> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 9);

/**
 * A snippet of a recipe for list views.
 *
 * @generated from message frontendapi.RecipeSnippet
 */
export type RecipeSnippet = Message<"frontendapi.RecipeSnippet"> & {
  /**
   * The ID of the recipe.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The title of the recipe.
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * The summary of the recipe.
   *
   * @generated from field: string summary = 3;
   */
  summary: string;

  /**
   * The image URL of the recipe.
   *
   * @generated from field: string image_url = 4;
   */
  imageUrl: string;
};

/**
 * Describes the message frontendapi.RecipeSnippet.
 * Use `create(RecipeSnippetSchema)` to create a new message.
 */
export const RecipeSnippetSchema: GenMessage<RecipeSnippet> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 10);

/**
 * A request for FrontendService.ListRecipes.
 *
 * @generated from message frontendapi.ListRecipesRequest
 */
export type ListRecipesRequest = Message<"frontendapi.ListRecipesRequest"> & {
  /**
   * A text query to filter by.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * The pagination token for the next page of recipes.
   * If unset, the first page is returned.
   *
   * @generated from field: frontendapi.Pagination pagination = 2;
   */
  pagination?: Pagination;
};

/**
 * Describes the message frontendapi.ListRecipesRequest.
 * Use `create(ListRecipesRequestSchema)` to create a new message.
 */
export const ListRecipesRequestSchema: GenMessage<ListRecipesRequest> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 11);

/**
 * A response for FrontendService.ListRecipes.
 *
 * @generated from message frontendapi.ListRecipesResponse
 */
export type ListRecipesResponse = Message<"frontendapi.ListRecipesResponse"> & {
  /**
   * The recipes.
   *
   * @generated from field: repeated frontendapi.RecipeSnippet recipes = 1;
   */
  recipes: RecipeSnippet[];

  /**
   * The pagination token for the next page of recipes.
   *
   * @generated from field: frontendapi.Pagination pagination = 2;
   */
  pagination?: Pagination;
};

/**
 * Describes the message frontendapi.ListRecipesResponse.
 * Use `create(ListRecipesResponseSchema)` to create a new message.
 */
export const ListRecipesResponseSchema: GenMessage<ListRecipesResponse> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 12);

/**
 * A request to start a chat session.
 *
 * @generated from message frontendapi.StartChatRequest
 */
export type StartChatRequest = Message<"frontendapi.StartChatRequest"> & {
  /**
   * The recipe to chat about.
   *
   * @generated from oneof frontendapi.StartChatRequest.recipe
   */
  recipe: {
    /**
     * Free-form text of the recipe.
     *
     * @generated from field: string recipe_text = 2;
     */
    value: string;
    case: "recipeText";
  } | {
    /**
     * The ID of a cookchat recipe.
     *
     * @generated from field: string recipe_id = 3;
     */
    value: string;
    case: "recipeId";
  } | { case: undefined; value?: undefined };

  /**
   * The model provider to use for the chat.
   *
   * @generated from field: frontendapi.StartChatRequest.ModelProvider model_provider = 4;
   */
  modelProvider: StartChatRequest_ModelProvider;
};

/**
 * Describes the message frontendapi.StartChatRequest.
 * Use `create(StartChatRequestSchema)` to create a new message.
 */
export const StartChatRequestSchema: GenMessage<StartChatRequest> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 13);

/**
 * @generated from enum frontendapi.StartChatRequest.ModelProvider
 */
export enum StartChatRequest_ModelProvider {
  /**
   * The default model.
   *
   * @generated from enum value: MODEL_PROVIDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Google GenAI model.
   *
   * @generated from enum value: MODEL_PROVIDER_GOOGLE_GENAI = 1;
   */
  GOOGLE_GENAI = 1,

  /**
   * OpenAI model.
   *
   * @generated from enum value: MODEL_PROVIDER_OPENAI = 2;
   */
  OPENAI = 2,
}

/**
 * Describes the enum frontendapi.StartChatRequest.ModelProvider.
 */
export const StartChatRequest_ModelProviderSchema: GenEnum<StartChatRequest_ModelProvider> = /*@__PURE__*/
  enumDesc(file_frontendapi_frontend, 13, 0);

/**
 * A response to start a chat session.
 *
 * @generated from message frontendapi.StartChatResponse
 */
export type StartChatResponse = Message<"frontendapi.StartChatResponse"> & {
  /**
   * The ephemeral API key to use to start the chat.
   *
   * @generated from field: string chat_api_key = 1;
   */
  chatApiKey: string;

  /**
   * The chat model to use for the session.
   *
   * @generated from field: string chat_model = 2;
   */
  chatModel: string;

  /**
   * Instructions for the chat session.
   *
   * @generated from field: string chat_instructions = 3;
   */
  chatInstructions: string;
};

/**
 * Describes the message frontendapi.StartChatResponse.
 * Use `create(StartChatResponseSchema)` to create a new message.
 */
export const StartChatResponseSchema: GenMessage<StartChatResponse> = /*@__PURE__*/
  messageDesc(file_frontendapi_frontend, 14);

/**
 * @generated from enum frontendapi.Language
 */
export enum Language {
  /**
   * Unknown language.
   *
   * @generated from enum value: LANGUAGE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * English.
   *
   * @generated from enum value: LANGUAGE_ENGLISH = 1;
   */
  ENGLISH = 1,

  /**
   * Japanese.
   *
   * @generated from enum value: LANGUAGE_JAPANESE = 2;
   */
  JAPANESE = 2,
}

/**
 * Describes the enum frontendapi.Language.
 */
export const LanguageSchema: GenEnum<Language> = /*@__PURE__*/
  enumDesc(file_frontendapi_frontend, 0);

/**
 * The source of a recipe.
 *
 * @generated from enum frontendapi.RecipeSource
 */
export enum RecipeSource {
  /**
   * Unknown source.
   *
   * @generated from enum value: RECIPE_SOURCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Recipe from cookpad.
   *
   * @generated from enum value: RECIPE_SOURCE_COOKPAD = 1;
   */
  COOKPAD = 1,
}

/**
 * Describes the enum frontendapi.RecipeSource.
 */
export const RecipeSourceSchema: GenEnum<RecipeSource> = /*@__PURE__*/
  enumDesc(file_frontendapi_frontend, 1);

/**
 * A chat service.
 *
 * @generated from service frontendapi.ChatService
 */
export const ChatService: GenService<{
  /**
   * Chat with a stream of messages.
   *
   * @generated from rpc frontendapi.ChatService.Chat
   */
  chat: {
    methodKind: "bidi_streaming";
    input: typeof ChatRequestSchema;
    output: typeof ChatResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_frontendapi_frontend, 0);

/**
 * @generated from service frontendapi.FrontendService
 */
export const FrontendService: GenService<{
  /**
   * Get the recipe for a given recipe ID.
   *
   * @generated from rpc frontendapi.FrontendService.GetRecipe
   */
  getRecipe: {
    methodKind: "unary";
    input: typeof GetRecipeRequestSchema;
    output: typeof GetRecipeResponseSchema;
  },
  /**
   * Get the list of recipes.
   *
   * @generated from rpc frontendapi.FrontendService.ListRecipes
   */
  listRecipes: {
    methodKind: "unary";
    input: typeof ListRecipesRequestSchema;
    output: typeof ListRecipesResponseSchema;
  },
  /**
   * Start a chat session.
   *
   * @generated from rpc frontendapi.FrontendService.StartChat
   */
  startChat: {
    methodKind: "unary";
    input: typeof StartChatRequestSchema;
    output: typeof StartChatResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_frontendapi_frontend, 1);

